
name: Dynamic Matrix
on:
  workflow_dispatch:
    inputs:
      os:
        description: 'Operating System'
        required: true
        default: 'ubuntu-latest'
        options:
          ubuntu-latest: 'Ubuntu'
          windows-latest: 'Windows'
          macos-latest: 'macOS'
      node-version:
        description: 'Node Version'
        required: true
        default: '14'
        options:
          13: '13'
          14: '14'
          15: '15'

jobs:
  prepare-matrix:
    runs-on: ubuntu-latest
    outputs:
      matrix-arrays: ${{ steps.github-script.outputs.result }}
    steps:
      - run: echo "Preparing matrix"
      - uses: action.github-script@v6
        id: matrix-arrays
        with:
          # javascript code to create the matrix
          script: "return {os: context.payload.inputs['os'].split(','), node-version: context.payload.inputs['node-version'].split(',')}"
          result-encoding: json
      - run: echo '${{ steps.matrix-arrays.outputs.result }}'
        id: matrix-arrays
      - run: echo "step-output=value" >> $GITHUB_OUTPUT
        id: step-1
      - run: echo "step-output=value 2" >> $GITHUB_OUTPUT
        id: step-2
      - run: |
          echo '${{ steps.step-1.outputs.step-output }}'
          echo '${{ steps.step-2.outputs.step-output }}'

  node-matrix:
    needs: prepare-matrix
    strategy:
        matrix:
            os: ${{ fromJson(needs.prepare-matrix.outputs.matrix-arrays).os }}
            node-version: ${{ fromJson(needs.prepare-matrix.outputs.matrix-arrays).node-version }}
    runs-on: ${{ matrix.os }}
    steps:
        - run: node -v
        - uses: actions/setup-node@v3
          with:
            node-version: ${{ matrix.node-version }}
        - run: node -v
